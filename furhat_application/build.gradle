plugins {
    id "org.jetbrains.kotlin.jvm" version "1.8.21"
    id 'com.github.johnrengelman.shadow' version '2.0.4'
    id 'org.jetbrains.kotlin.plugin.serialization' version '2.0.20'
}

apply plugin: 'java'
apply plugin: 'kotlin'

//Defines what version of Java to use.
sourceCompatibility = 1.8

//Defines how Kotlin should compile.
compileKotlin {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    kotlinOptions {
        //Defines what jvm bytecode to use, 1.8 rather than 1.6
        jvmTarget = "1.8"
        apiVersion = "1.8"
        languageVersion = "1.8"
    }
}

//Defines how Kotlin should compile when testingTry to keep it the same as compileKotlin.
compileTestKotlin {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    kotlinOptions {
        //Defines what jvm bytecode to use, 1.8 rather than 1.6
        jvmTarget = "1.8"
        apiVersion = "1.8"
        languageVersion = "1.8"
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://artifacts.cloudflight.io/repository/plugins-maven"}
    maven { url "https://s3-eu-west-1.amazonaws.com/furhat-maven/releases"}
    maven { url 'https://repo.gradle.org/gradle/libs-releases' }
    jcenter()
}


dependencies {
    implementation 'khttp:khttp:1.0.0'
    implementation 'com.furhatrobotics.furhatos:furhat-commons:2.8.3'
    implementation 'com.furhatrobotics.assets:StandardLibraryCollection:1.2.0'
    // import Kotlin API client BOM
    implementation platform('com.aallam.openai:openai-client-bom:3.8.2')

    // define dependencies without versions
    implementation("com.aallam.openai:openai-client")
    runtimeOnly 'io.ktor:ktor-client-okhttp'

//    implementation('com.google.auth:google-auth-library-oauth2-http:1.19.0')

//    implementation("io.ktor:ktor-server-core:2.3.12")
//    implementation("io.ktor:ktor-server-netty:2.3.12")
//    implementation("io.ktor:ktor-server-freemarker:2.3.12")
//    implementation("io.ktor:ktor-server-websockets:2.3.12")
//    implementation("io.ktor:ktor-server-content-negotiation:2.3.12")
//    implementation("io.ktor:ktor-client-content-negotiation:2.3.12")
//    implementation("io.ktor:ktor-serialization-kotlinx-json:2.3.12")
    implementation('org.jetbrains.kotlinx:kotlinx-serialization-json:1.7.1')

    implementation("io.ktor:ktor-client-core:2.3.12")
    implementation("io.ktor:ktor-client-cio:2.3.12")
    implementation("io.ktor:ktor-client-websockets:2.3.12")

    implementation('org.zeromq:jeromq:0.5.3')
}

jar {
    def lowerCasedName = baseName.toLowerCase()
    def normalizedName = lowerCasedName.substring(0,1).toUpperCase() + lowerCasedName.substring(1)
    manifest.attributes(
            'Class-Path': configurations.compileClasspath.collect { it.getName() }.join(' '),
            'Main-Class': "furhatos.app.${lowerCasedName}.${normalizedName}Skill"
    )
}

//ShadowJar depends on jar being finished properly.
shadowJar {
    Properties properties = new Properties()
    properties.load(project.file('skill.properties').newDataInputStream())
    def version = properties.getProperty('version')
    def name = properties.getProperty('name')
    archiveName = "${name}_${version}.skill"


    manifest {
        exclude '**/Log4j2Plugins.dat'
        exclude '**/node_modules'
    }
    from "skill.properties"
    from "assets"
    extension 'skill'
}
